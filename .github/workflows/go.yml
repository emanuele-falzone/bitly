name: Go

on:
  push:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18

    - name: Set up protoc
      uses: arduino/setup-protoc@v1
      with:
        version: '3.19.4'

    - name: Download all dependencies
      run: go mod download

    - name: Generate mock
      run: make generate-repository-mock
    
    - name: Generate grpc server
      run: make grpc-server

    - name: Generate grpc server documentation
      run: make grpc-server-documentation

    - name: Build
      run: go build -v ./cmd/main.go

    - name: Unit Test
      run: |
        CVPKG=$(go list ./internal/... | grep -v pb | tr '\n' ',') 
        go test ./internal/... -coverpkg=$CVPKG -coverprofile coverage.out -v 
        go tool cover -html coverage.out -o coverage.html
    
    - name: Integration Test
      env:
        INTEGRATION_REDIS_CONNECTION_STRING: redis://localhost:6379
      run: |
        docker-compose -f test/integration/docker-compose.yml up -d
        sleep 5
        go test ./test/integration/integration_test.go -v
        docker-compose -f test/integration/docker-compose.yml down

    - name: Acceptance Test
      env:
        ACCEPTANCE_REDIS_CONNECTION_STRING: redis://localhost:6379
        ACCEPTANCE_GRPC_SERVER: localhost:4000
      run: |
        docker-compose -f test/acceptance/docker-compose.yml up -d
        sleep 5
        go test ./test/acceptance/go_acceptance_test.go -v
        go test ./test/acceptance/grpc_acceptance_test.go -v
        docker-compose -f test/acceptance/docker-compose.yml down

    - uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: coverage.html